//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace FroneriATS.Module.BusinessObjects.FroneriATS
{

    public partial class mobile : XPLiteObject
    {
        int fid;
        [Key(true)]
        [MemberDesignTimeVisibility(false)]
        [DevExpress.Xpo.DisplayName(@"Oid")]
        public int id
        {
            get { return fid; }
            set { SetPropertyValue<int>(nameof(id), ref fid, value); }
        }
        mobile_status fstatus_id;
        [Association(@"mobileReferencesmobile_status")]
        [DevExpress.Xpo.DisplayName(@"Status")]
        [DevExpress.Persistent.Validation.RuleRequiredField("mobile_status_id_vld_req", DevExpress.Persistent.Validation.DefaultContexts.Save, "You must enter Status")]
        public mobile_status status_id
        {
            get { return fstatus_id; }
            set { SetPropertyValue<mobile_status>(nameof(status_id), ref fstatus_id, value); }
        }
        mobile_model fmodel_id;
        [Association(@"mobileReferencesmobile_model")]
        [DevExpress.Xpo.DisplayName(@"Model")]
        [DevExpress.Persistent.Validation.RuleRequiredField("mobile_model_id_vld_req", DevExpress.Persistent.Validation.DefaultContexts.Save, "You must enter Model")]
        public mobile_model model_id
        {
            get { return fmodel_id; }
            set { SetPropertyValue<mobile_model>(nameof(model_id), ref fmodel_id, value); }
        }
        DateTime fregister_date;
        [DevExpress.Xpo.DisplayName(@"Register date")]
        [DevExpress.Persistent.Validation.RuleRequiredField("mobile_register_date_vld_req", DevExpress.Persistent.Validation.DefaultContexts.Save, "You must enter Register date")]
        public DateTime register_date
        {
            get { return fregister_date; }
            set { SetPropertyValue<DateTime>(nameof(register_date), ref fregister_date, value); }
        }
        string fnumber;
        [MemberDesignTimeVisibility(false)]
        [DevExpress.Xpo.DisplayName(@"Number")]
        public string number
        {
            get { return fnumber; }
            set { SetPropertyValue<string>(nameof(number), ref fnumber, value); }
        }
        string fserial_number;
        [Size(50)]
        [DevExpress.Xpo.DisplayName(@"Serial number")]
        [DevExpress.Persistent.Validation.RuleRequiredField("mobile_serial_number_vld_req", DevExpress.Persistent.Validation.DefaultContexts.Save, "You must enter Serial number"), DevExpress.Persistent.Validation.RuleUniqueValue(id: "", DevExpress.Persistent.Validation.DefaultContexts.Save, CriteriaEvaluationBehavior = DevExpress.Persistent.Validation.CriteriaEvaluationBehavior.BeforeTransaction, MessageTemplateMustBeUnique = "{TargetPropertyName} Already Exists")]
        public string serial_number
        {
            get { return fserial_number; }
            set { SetPropertyValue<string>(nameof(serial_number), ref fserial_number, value); }
        }
        inventory finventory_id;
        [Association(@"mobileReferencesinventory")]
        [DevExpress.Xpo.DisplayName(@"Inventory")]
        [DevExpress.Persistent.Validation.RuleRequiredField("mobile_inventory_id_vld_req", DevExpress.Persistent.Validation.DefaultContexts.Save, "You must enter Inventory")]
        public inventory inventory_id
        {
            get { return finventory_id; }
            set { SetPropertyValue<inventory>(nameof(inventory_id), ref finventory_id, value); }
        }
        persons fperson_id;
        [Association(@"mobileReferencesperson")]
        [DevExpress.Xpo.DisplayName(@"Person")]
        public persons person_id
        {
            get { return fperson_id; }
            set { SetPropertyValue<persons>(nameof(person_id), ref fperson_id, value); }
        }
        bool favailable;
        [DevExpress.Xpo.DisplayName(@"Available")]
        public bool available
        {
            get { return favailable; }
            set { SetPropertyValue<bool>(nameof(available), ref favailable, value); }
        }
        string fdevice_name;
        [Size(50)]
        [DevExpress.Xpo.DisplayName(@"Device name")]
        [DevExpress.Persistent.Validation.RuleUniqueValue(id: "", DevExpress.Persistent.Validation.DefaultContexts.Save, CriteriaEvaluationBehavior = DevExpress.Persistent.Validation.CriteriaEvaluationBehavior.BeforeTransaction, CustomMessageTemplate = "{TargetPropertyName} Already Exists", SkipNullOrEmptyValues = true)]
        public string device_name
        {
            get { return fdevice_name; }
            set { SetPropertyValue<string>(nameof(device_name), ref fdevice_name, value); }
        }
        string fdevice_id;
        [Size(50)]
        [DevExpress.Xpo.DisplayName(@"Device id")]
        [DevExpress.Persistent.Validation.RuleUniqueValue(id: "", DevExpress.Persistent.Validation.DefaultContexts.Save, CriteriaEvaluationBehavior = DevExpress.Persistent.Validation.CriteriaEvaluationBehavior.BeforeTransaction, CustomMessageTemplate = "{TargetPropertyName} Already Exists", SkipNullOrEmptyValues = true)]
        public string device_id
        {
            get { return fdevice_id; }
            set { SetPropertyValue<string>(nameof(device_id), ref fdevice_id, value); }
        }
        string froute_number;
        [Size(50)]
        [DevExpress.Xpo.DisplayName(@"Route number")]
        public string route_number
        {
            get { return froute_number; }
            set { SetPropertyValue<string>(nameof(route_number), ref froute_number, value); }
        }
        string fnotes;
        [Size(1000)]
        [DevExpress.Xpo.DisplayName(@"Notes")]
        public string notes
        {
            get { return fnotes; }
            set { SetPropertyValue<string>(nameof(notes), ref fnotes, value); }
        }
    }

}
